[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = My Name
	email = my.email@company.com
[safe]
	directory = .git
	# Before disabling, make sure you understand this security measure, and why it exists.
	# You should not do this if your repositories are stored on a shared drive.
	# However, if you are the sole user of your machine 100% of the time, and your repositories are stored locally,
	# then disabling this check should, theoretically, pose no increased risk.
	directory = *
[core]
	autocrlf = input
	editor = 'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession
	
	eol = false
	
	# use aggressive compression
  	# can make your repo smaller but can also be slow
  	compression = 9
	
	filemode = false
	whitespace = fix
[color]
	ui = auto
[pull]
	rebase = true
[fetch]
	prune = true
[diff]
	colorMoved = zebra
[alias]
	temp = checkout
	repo-cleanup = !git gc --aggressive --prune=now && git repack -adfF --depth=250 --window=250
	gitignore-cleanup = !git rm -r --cached . && git add .
	default-branch-name = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
	drop-empty-commits = !git filter-branch --prune-empty --parent-filter 'sed "s/-p //g" | xargs -r git show-branch --independent | sed "s/\\</-p /g"'
	flatten-all-merges = rebase --root HEAD
	cleanup-local = !git fetch --prune && git branch --merged remotes/origin/develop | %{$_.trim()} | ?{$_ -notmatch 'develop'} | %{git branch -d $_} && git remote prune origin
	cleanup-remote = !git fetch --prune && git branch --merged remotes/origin/develop -r | %{$_.trim().replace('origin/', '')} | ?{$_ -notmatch 'develop'} | %{git push --delete origin $_} && git remote prune origin
[i18n]
	commitEncoding = utf-8
[push]
	autoSetupRemote = true
